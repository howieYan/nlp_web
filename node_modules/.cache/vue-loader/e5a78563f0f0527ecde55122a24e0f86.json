{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/App.vue","mtime":1586331564115},{"path":"/Users/howie/Documents/nlp_web/node_modules/css-loader/dist/cjs.js","mtime":1582429582288},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1582429582421},{"path":"/Users/howie/Documents/nlp_web/node_modules/postcss-loader/src/index.js","mtime":1564153364000},{"path":"/Users/howie/Documents/nlp_web/node_modules/sass-loader/dist/cjs.js","mtime":1571922493338},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4vY3NzL3Jlc2V0LmNzcyI7CgojYXBwIHsKICAgIGZvbnQtZmFtaWx5OiAnQXZlbmlyJywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkOwogICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <router-view/>\n    </div>\n</template>\n\n\n<script>\n    import Vue from 'vue';\n    // import './permission'\n    import Keycloak from 'keycloak-js'\n    import Cookies from 'js-cookie'\n    import axios from 'axios'\n    import router from './router/index'\n    export default {\n        name: \"App\",\n        data () {\n            return {\n            }\n        },\n        computed: {\n        },\n        methods: {\n            LoadData () {\n                let refreshToken = Cookies.get('refreshToken') // 获取用户登录token\n                let token = Cookies.get('token') // 获取用户登录token\n                let formData =  new URLSearchParams();\n                formData.append('client_id', this.$store.state.clientId);\n                formData.append('grant_type', 'refresh_token');\n                formData.append('refresh_token', refreshToken);\n                let _this = this\n                if (!token || !refreshToken) {\n                    let keycloak = null;\n                    keycloak = Keycloak({\n                        url: 'http://u.xlmediawatch.com/auth',\n                        realm: 'xlplatform',\n                        clientId: _this.$store.state.clientId\n                    });\n\n                    keycloak.init({ onLoad: 'login-required' }).success(function (authenticated) {\n                        if (!authenticated) {\n                            alert('登陆失败')\n                        } else {\n                            //登陆成功\n                            keycloak.loadUserProfile().success(data => {\n                                Cookies.set('token', keycloak.token)\n                                Cookies.set('refreshToken', keycloak.refreshToken)\n                                router.push({ path: \"/partsAnalysis\" })\n                            })\n                        }\n                    }).error(function () {\n                        alert('认证中心异常');\n                    });\n                } else {\n                    axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/token', formData,{\n                        headers: {\n                            'Content-Type': 'application/x-www-form-urlencoded' //将表单数据传递转化为form-data类型\n                        },\n                    }).then(function (response) {\n                        if (response.data.expires_in <= 0) {\n                            // 这个response.data.expires_in 小于等于0  更新 refreshToken\n                            // 这个response.data.expires_in 小于等于0  更新 refreshToken\n                            axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/logout',formData,\n                                {headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then( function(res) {\n                            }).catch(function (error) { // 请求失败处理\n                            });\n                            let keycloak = null;\n                            keycloak = Keycloak({\n                                url: 'http://u.xlmediawatch.com/auth',\n                                realm: 'xlplatform',\n                                clientId: _this.$store.state.clientId\n                            });\n\n                            keycloak.init({ onLoad: 'login-required' }).success(function (authenticated) {\n                                if (!authenticated) {\n                                    alert('登陆失败')\n                                } else {\n                                    //登陆成功\n                                    keycloak.loadUserProfile().success(data => {\n                                        Cookies.set('token', keycloak.token)\n                                        Cookies.set('refreshToken', keycloak.refreshToken)\n                                        router.push({ path:'/partsAnalysis' })\n                                    })\n                                }\n                            }).error(function () {\n                                alert('认证中心异常');\n                            });\n                        } else {\n                            router.push({ path:'/partsAnalysis' })\n                        }\n                    })\n                    .catch(function (error) {\n                        axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/logout',formData,\n                            {headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then( function(res) {\n                        }).catch(function (error) { // 请求失败处理\n                        });\n                        Cookies.remove('token');\n                        Cookies.remove('routerUrl');\n                        Cookies.remove('refreshToken');\n                        router.push({ path: \"/login\" });\n                    });\n\n                }\n            }\n        },\n        created () {\n            this.LoadData()\n        },\n        mounted () {\n\n        },\n        updated () {\n        }\n    }\n</script>\n\n\n<style lang=\"scss\">\n    @import \"./css/reset.css\";\n\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n</style>\n"]}]}