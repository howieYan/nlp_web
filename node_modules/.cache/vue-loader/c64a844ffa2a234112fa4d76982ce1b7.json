{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/App.vue","mtime":1586331564115},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKLy8gaW1wb3J0ICcuL3Blcm1pc3Npb24nCmltcG9ydCBLZXljbG9hayBmcm9tICdrZXljbG9hay1qcycKaW1wb3J0IENvb2tpZXMgZnJvbSAnanMtY29va2llJwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCByb3V0ZXIgZnJvbSAnLi9yb3V0ZXIvaW5kZXgnCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJBcHAiLAogICAgZGF0YSAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgTG9hZERhdGEgKCkgewogICAgICAgICAgICBsZXQgcmVmcmVzaFRva2VuID0gQ29va2llcy5nZXQoJ3JlZnJlc2hUb2tlbicpIC8vIOiOt+WPlueUqOaIt+eZu+W9lXRva2VuCiAgICAgICAgICAgIGxldCB0b2tlbiA9IENvb2tpZXMuZ2V0KCd0b2tlbicpIC8vIOiOt+WPlueUqOaIt+eZu+W9lXRva2VuCiAgICAgICAgICAgIGxldCBmb3JtRGF0YSA9ICBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7CiAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnY2xpZW50X2lkJywgdGhpcy4kc3RvcmUuc3RhdGUuY2xpZW50SWQpOwogICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2dyYW50X3R5cGUnLCAncmVmcmVzaF90b2tlbicpOwogICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3JlZnJlc2hfdG9rZW4nLCByZWZyZXNoVG9rZW4pOwogICAgICAgICAgICBsZXQgX3RoaXMgPSB0aGlzCiAgICAgICAgICAgIGlmICghdG9rZW4gfHwgIXJlZnJlc2hUb2tlbikgewogICAgICAgICAgICAgICAgbGV0IGtleWNsb2FrID0gbnVsbDsKICAgICAgICAgICAgICAgIGtleWNsb2FrID0gS2V5Y2xvYWsoewogICAgICAgICAgICAgICAgICAgIHVybDogJ2h0dHA6Ly91LnhsbWVkaWF3YXRjaC5jb20vYXV0aCcsCiAgICAgICAgICAgICAgICAgICAgcmVhbG06ICd4bHBsYXRmb3JtJywKICAgICAgICAgICAgICAgICAgICBjbGllbnRJZDogX3RoaXMuJHN0b3JlLnN0YXRlLmNsaWVudElkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBrZXljbG9hay5pbml0KHsgb25Mb2FkOiAnbG9naW4tcmVxdWlyZWQnIH0pLnN1Y2Nlc3MoZnVuY3Rpb24gKGF1dGhlbnRpY2F0ZWQpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoIWF1dGhlbnRpY2F0ZWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+eZu+mZhuWksei0pScpCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy/nmbvpmYbmiJDlip8KICAgICAgICAgICAgICAgICAgICAgICAga2V5Y2xvYWsubG9hZFVzZXJQcm9maWxlKCkuc3VjY2VzcyhkYXRhID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvb2tpZXMuc2V0KCd0b2tlbicsIGtleWNsb2FrLnRva2VuKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29va2llcy5zZXQoJ3JlZnJlc2hUb2tlbicsIGtleWNsb2FrLnJlZnJlc2hUb2tlbikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKHsgcGF0aDogIi9wYXJ0c0FuYWx5c2lzIiB9KQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pLmVycm9yKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBhbGVydCgn6K6k6K+B5Lit5b+D5byC5bi4Jyk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGF4aW9zLnBvc3QoJ2h0dHA6Ly91LnhsbWVkaWF3YXRjaC5jb20vYXV0aC9yZWFsbXMveGxwbGF0Zm9ybS9wcm90b2NvbC9vcGVuaWQtY29ubmVjdC90b2tlbicsIGZvcm1EYXRhLHsKICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyAvL+WwhuihqOWNleaVsOaNruS8oOmAkui9rOWMluS4umZvcm0tZGF0Yeexu+WeiwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmV4cGlyZXNfaW4gPD0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAvLyDov5nkuKpyZXNwb25zZS5kYXRhLmV4cGlyZXNfaW4g5bCP5LqO562J5LqOMCAg5pu05pawIHJlZnJlc2hUb2tlbgogICAgICAgICAgICAgICAgICAgICAgICAvLyDov5nkuKpyZXNwb25zZS5kYXRhLmV4cGlyZXNfaW4g5bCP5LqO562J5LqOMCAg5pu05pawIHJlZnJlc2hUb2tlbgogICAgICAgICAgICAgICAgICAgICAgICBheGlvcy5wb3N0KCdodHRwOi8vdS54bG1lZGlhd2F0Y2guY29tL2F1dGgvcmVhbG1zL3hscGxhdGZvcm0vcHJvdG9jb2wvb3BlbmlkLWNvbm5lY3QvbG9nb3V0Jyxmb3JtRGF0YSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfX0pLnRoZW4oIGZ1bmN0aW9uKHJlcykgewogICAgICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsgLy8g6K+35rGC5aSx6LSl5aSE55CGCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICBsZXQga2V5Y2xvYWsgPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICBrZXljbG9hayA9IEtleWNsb2FrKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogJ2h0dHA6Ly91LnhsbWVkaWF3YXRjaC5jb20vYXV0aCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFsbTogJ3hscGxhdGZvcm0nLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpZW50SWQ6IF90aGlzLiRzdG9yZS5zdGF0ZS5jbGllbnRJZAogICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGtleWNsb2FrLmluaXQoeyBvbkxvYWQ6ICdsb2dpbi1yZXF1aXJlZCcgfSkuc3VjY2VzcyhmdW5jdGlvbiAoYXV0aGVudGljYXRlZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFhdXRoZW50aWNhdGVkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+eZu+mZhuWksei0pScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v55m76ZmG5oiQ5YqfCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5Y2xvYWsubG9hZFVzZXJQcm9maWxlKCkuc3VjY2VzcyhkYXRhID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29va2llcy5zZXQoJ3Rva2VuJywga2V5Y2xvYWsudG9rZW4pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvb2tpZXMuc2V0KCdyZWZyZXNoVG9rZW4nLCBrZXljbG9hay5yZWZyZXNoVG9rZW4pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKHsgcGF0aDonL3BhcnRzQW5hbHlzaXMnIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+iupOivgeS4reW/g+W8guW4uCcpOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCh7IHBhdGg6Jy9wYXJ0c0FuYWx5c2lzJyB9KQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgYXhpb3MucG9zdCgnaHR0cDovL3UueGxtZWRpYXdhdGNoLmNvbS9hdXRoL3JlYWxtcy94bHBsYXRmb3JtL3Byb3RvY29sL29wZW5pZC1jb25uZWN0L2xvZ291dCcsZm9ybURhdGEsCiAgICAgICAgICAgICAgICAgICAgICAgIHtoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfX0pLnRoZW4oIGZ1bmN0aW9uKHJlcykgewogICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgeyAvLyDor7fmsYLlpLHotKXlpITnkIYKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBDb29raWVzLnJlbW92ZSgndG9rZW4nKTsKICAgICAgICAgICAgICAgICAgICBDb29raWVzLnJlbW92ZSgncm91dGVyVXJsJyk7CiAgICAgICAgICAgICAgICAgICAgQ29va2llcy5yZW1vdmUoJ3JlZnJlc2hUb2tlbicpOwogICAgICAgICAgICAgICAgICAgIHJvdXRlci5wdXNoKHsgcGF0aDogIi9sb2dpbiIgfSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCAoKSB7CiAgICAgICAgdGhpcy5Mb2FkRGF0YSgpCiAgICB9LAogICAgbW91bnRlZCAoKSB7CgogICAgfSwKICAgIHVwZGF0ZWQgKCkgewogICAgfQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <router-view/>\n    </div>\n</template>\n\n\n<script>\n    import Vue from 'vue';\n    // import './permission'\n    import Keycloak from 'keycloak-js'\n    import Cookies from 'js-cookie'\n    import axios from 'axios'\n    import router from './router/index'\n    export default {\n        name: \"App\",\n        data () {\n            return {\n            }\n        },\n        computed: {\n        },\n        methods: {\n            LoadData () {\n                let refreshToken = Cookies.get('refreshToken') // 获取用户登录token\n                let token = Cookies.get('token') // 获取用户登录token\n                let formData =  new URLSearchParams();\n                formData.append('client_id', this.$store.state.clientId);\n                formData.append('grant_type', 'refresh_token');\n                formData.append('refresh_token', refreshToken);\n                let _this = this\n                if (!token || !refreshToken) {\n                    let keycloak = null;\n                    keycloak = Keycloak({\n                        url: 'http://u.xlmediawatch.com/auth',\n                        realm: 'xlplatform',\n                        clientId: _this.$store.state.clientId\n                    });\n\n                    keycloak.init({ onLoad: 'login-required' }).success(function (authenticated) {\n                        if (!authenticated) {\n                            alert('登陆失败')\n                        } else {\n                            //登陆成功\n                            keycloak.loadUserProfile().success(data => {\n                                Cookies.set('token', keycloak.token)\n                                Cookies.set('refreshToken', keycloak.refreshToken)\n                                router.push({ path: \"/partsAnalysis\" })\n                            })\n                        }\n                    }).error(function () {\n                        alert('认证中心异常');\n                    });\n                } else {\n                    axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/token', formData,{\n                        headers: {\n                            'Content-Type': 'application/x-www-form-urlencoded' //将表单数据传递转化为form-data类型\n                        },\n                    }).then(function (response) {\n                        if (response.data.expires_in <= 0) {\n                            // 这个response.data.expires_in 小于等于0  更新 refreshToken\n                            // 这个response.data.expires_in 小于等于0  更新 refreshToken\n                            axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/logout',formData,\n                                {headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then( function(res) {\n                            }).catch(function (error) { // 请求失败处理\n                            });\n                            let keycloak = null;\n                            keycloak = Keycloak({\n                                url: 'http://u.xlmediawatch.com/auth',\n                                realm: 'xlplatform',\n                                clientId: _this.$store.state.clientId\n                            });\n\n                            keycloak.init({ onLoad: 'login-required' }).success(function (authenticated) {\n                                if (!authenticated) {\n                                    alert('登陆失败')\n                                } else {\n                                    //登陆成功\n                                    keycloak.loadUserProfile().success(data => {\n                                        Cookies.set('token', keycloak.token)\n                                        Cookies.set('refreshToken', keycloak.refreshToken)\n                                        router.push({ path:'/partsAnalysis' })\n                                    })\n                                }\n                            }).error(function () {\n                                alert('认证中心异常');\n                            });\n                        } else {\n                            router.push({ path:'/partsAnalysis' })\n                        }\n                    })\n                    .catch(function (error) {\n                        axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/logout',formData,\n                            {headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then( function(res) {\n                        }).catch(function (error) { // 请求失败处理\n                        });\n                        Cookies.remove('token');\n                        Cookies.remove('routerUrl');\n                        Cookies.remove('refreshToken');\n                        router.push({ path: \"/login\" });\n                    });\n\n                }\n            }\n        },\n        created () {\n            this.LoadData()\n        },\n        mounted () {\n\n        },\n        updated () {\n        }\n    }\n</script>\n\n\n<style lang=\"scss\">\n    @import \"./css/reset.css\";\n\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n</style>\n"]}]}