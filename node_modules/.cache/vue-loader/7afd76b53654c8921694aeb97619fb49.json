{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/views/Layout/Keyword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/Layout/Keyword.vue","mtime":1585021550673},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAiLi4vLi4vYXBpL2FwaSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIktleXdvcmQiLAogIHByb3BzOiBbJ2Zvcm1EYXRhJ10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdvcmQ6IFtdLAogICAgICBpc0xpc3Q6IHRydWUKICAgIH07CiAgfSwKICBjb21wdXRlZDoge30sCiAgbWV0aG9kczogewogICAgaW5pdEVjaGFydCgpIHsKICAgICAgbGV0IEtleXdvcmRJZCA9IHRoaXMuJHJlZnMuS2V5d29yZElkOwogICAgICBpZiAoIUtleXdvcmRJZCkgewogICAgICAgIHJldHVybiBmYWxzZQogICAgICB9CiAgICAgIGNvbnN0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoS2V5d29yZElkKTsKICAgICAgdmFyIG51bSA9ICcnOwogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDM7IGkrKykgewogICAgICAgIG51bSArPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7CiAgICAgIH0KICAgICAgY29uc3Qgd29yZHMgPSBbXQogICAgICB0aGlzLndvcmQubWFwKCh2LCBpKSA9PiB7CiAgICAgICAgd29yZHMucHVzaCh7CiAgICAgICAgICBuYW1lOiB2LndvcmQsCiAgICAgICAgICB2YWx1ZTogdi5zY29yZQogICAgICAgIH0pCiAgICAgIH0pCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgfSwKICAgICAgICB0b29sYm94IDogewogICAgICAgICAgc2hvdyA6IHRydWUsCiAgICAgICAgICBmZWF0dXJlIDogewogICAgICAgICAgICBtYXJrIDogeyBzaG93IDogdHJ1ZSB9LAogICAgICAgICAgICByZXN0b3JlIDogeyBzaG93IDogdHJ1ZSB9LAogICAgICAgICAgICBzYXZlQXNJbWFnZSA6IHsgc2hvdyA6IHRydWUgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICIiLAogICAgICAgICAgICB0eXBlOiAid29yZENsb3VkIiwKICAgICAgICAgICAgc2l6ZTogWyIxMDAlIiwgIjEwMCUiXSwKICAgICAgICAgICAgdGV4dFBhZGRpbmc6IDAsCiAgICAgICAgICAgIGF1dG9TaXplOiB7CiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLAogICAgICAgICAgICAgIG1pblNpemU6IDE0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgICAgY29sb3I6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuICgKICAgICAgICAgICAgICAgICAgICAicmdiKCIgKwogICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDI1NSkgKwogICAgICAgICAgICAgICAgICAgICIsICIgKwogICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDI1NSkgKwogICAgICAgICAgICAgICAgICAgICIsICIgKwogICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDI1NSkgKwogICAgICAgICAgICAgICAgICAgICIpIgogICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGF0YTogd29yZHMKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgIGFuaW1hdGlvblR5cGU6ICJzY2FsZSIsCiAgICAgICAgYW5pbWF0aW9uRWFzaW5nOiAiZWxhc3RpY091dCIsCiAgICAgICAgYW5pbWF0aW9uRGVsYXk6IGZ1bmN0aW9uIChpZHgpIHsKICAgICAgICAgIHJldHVybiBNYXRoLnJhbmRvbSgpICogMjAwOwogICAgICAgIH0KICAgICAgfSwgdHJ1ZSk7CiAgICB9LAogICAgYXN5bmMgTG9hZERhdGEocmVjb3JkKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5pc0xpc3QgPSB0cnVlCiAgICAgICAgdGhpcy53b3JkID0gW10KICAgICAgICBsZXQgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3RpdGxlJywgcmVjb3JkLnRpdGxlKTsKICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2NvbnRlbnQnLHJlY29yZC5jb250ZW50KTsKICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXBpLmtleXdvcmRMaXN0KGZvcm1EYXRhKQogICAgICAgIGlmIChyZXN1bHQuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICB0aGlzLndvcmQgPSByZXN1bHQuZGF0YQogICAgICAgIH0KICAgICAgICB0aGlzLmlzTGlzdCA9IGZhbHNlCiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgdGhpcy5pbml0RWNoYXJ0KCkKICAgICAgICB9KQogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSkKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLmZvcm1EYXRhLnRpdGxlICYmIHRoaXMuZm9ybURhdGEuY29udGVudCkgewogICAgICB0aGlzLkxvYWREYXRhKHRoaXMuZm9ybURhdGEpCiAgICB9CiAgfSwKCiAgbW91bnRlZCgpIHsKICB9LAogIHVwZGF0ZWQoKSB7CiAgfQp9Cg=="},{"version":3,"sources":["Keyword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"Keyword.vue","sourceRoot":"src/views/LayoutTest","sourcesContent":["<template>\n    <div class=\"PartsAnalysis\">\n        <Card dis-hover class=\"Card\">\n\n            <p slot=\"title\">关键词</p>\n            <div ref=\"KeywordId\" class=\"KeywordEcharts\" v-if=\"word.length > 0\">\n\n            </div>\n            <div  class=\"KeywordElse\" v-else>\n                <div>没有关键词</div>\n            </div>\n            <Spin fix v-show=\"isList\">\n                <Icon type=\"ios-loading\" size=18 class=\"demo-spin-icon-load\"></Icon>\n                <div>载入中...</div>\n            </Spin>\n        </Card>\n    </div>\n</template>\n\n<script>\n  import api from \"../../api/api\";\n\n  export default {\n    name: \"Keyword\",\n    props: ['formData'],\n    data() {\n      return {\n        word: [],\n        isList: true\n      };\n    },\n    computed: {},\n    methods: {\n      initEchart() {\n        let KeywordId = this.$refs.KeywordId;\n        if (!KeywordId) {\n          return false\n        }\n        const myChart = this.$echarts.init(KeywordId);\n        var num = '';\n        for (var i = 0; i < 3; i++) {\n          num += Math.floor(Math.random() * 10);\n        }\n        const words = []\n        this.word.map((v, i) => {\n          words.push({\n            name: v.word,\n            value: v.score\n          })\n        })\n        myChart.setOption({\n          tooltip: {\n            show: true\n          },\n          toolbox : {\n            show : true,\n            feature : {\n              mark : { show : true },\n              restore : { show : true },\n              saveAsImage : { show : true }\n            }\n          },\n          series: [\n            {\n              name: \"\",\n              type: \"wordCloud\",\n              size: [\"100%\", \"100%\"],\n              textPadding: 0,\n              autoSize: {\n                enable: true,\n                minSize: 14\n              },\n              textStyle: {\n                normal: {\n                  color: function () {\n                    return (\n                      \"rgb(\" +\n                      Math.round(Math.random() * 255) +\n                      \", \" +\n                      Math.round(Math.random() * 255) +\n                      \", \" +\n                      Math.round(Math.random() * 255) +\n                      \")\"\n                    );\n                  }\n                }\n              },\n              data: words\n            }\n          ],\n          animationType: \"scale\",\n          animationEasing: \"elasticOut\",\n          animationDelay: function (idx) {\n            return Math.random() * 200;\n          }\n        }, true);\n      },\n      async LoadData(record) {\n        try {\n          this.isList = true\n          this.word = []\n          let formData = new FormData();\n          formData.append('title', record.title);\n          formData.append('content',record.content);\n          let result = await api.keywordList(formData)\n          if (result.code === 200) {\n            this.word = result.data\n          }\n          this.isList = false\n          this.$nextTick(() => {\n            this.initEchart()\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    },\n    created() {\n      if (this.formData.title && this.formData.content) {\n        this.LoadData(this.formData)\n      }\n    },\n\n    mounted() {\n    },\n    updated() {\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n    .PartsAnalysis {\n        background-color: #f6f6f6;\n        min-height: 300px;\n        padding: 20px;\n        .KeywordElse{\n            height: 300px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .Card {\n            .KeywordEcharts {\n                height: 300px;\n            }\n        }\n    }\n</style>\n\n"]}]}