{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/views/Layout/EmotionAnalysis.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/Layout/EmotionAnalysis.vue","mtime":1584599808820},{"path":"/Users/howie/Documents/nlp_web/node_modules/css-loader/dist/cjs.js","mtime":1582429582288},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1582429582421},{"path":"/Users/howie/Documents/nlp_web/node_modules/postcss-loader/src/index.js","mtime":1564153364000},{"path":"/Users/howie/Documents/nlp_web/node_modules/sass-loader/dist/cjs.js","mtime":1571922493338},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5QYXJ0c0FuYWx5c2lzIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmNmY2ZjY7CiAgICBtaW4taGVpZ2h0OiAzMDBweDsKICAgIHBhZGRpbmc6IDIwcHg7CgogICAgLkVtb3Rpb25BbmFseXNpcyB7CiAgICAgICAgLmhlYWRlcnNJbiB7CiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgICAgICAgICAgcGFkZGluZzogMTBweCAxNnB4OwogICAgICAgIH0KCiAgICAgICAgLml2dS1jYXJkLWhlYWQgewogICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgIH0KCiAgICAgICAgLkVudGl0eUlkZW50aWZpY2F0aW9uRWNoYXJ0cyB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBtaW4taGVpZ2h0OiAzMDBweDsKICAgICAgICB9CgogICAgICAgIC5wIHsKICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgICAgICBjb2xvcjogIzE3MjMzZDsKICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsKICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICAgICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["EmotionAnalysis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EmotionAnalysis.vue","sourceRoot":"src/views/LayoutTest","sourcesContent":["<template>\n    <div class=\"PartsAnalysis\">\n        <Card dis-hover class=\"Card cardList EmotionAnalysis\">\n            <div slot=\"title\">\n                <div class=\"headersIn\">\n                    <div class=\"p\">情感分析</div>\n                    <div class=\"p\">\n                        中性区间\n                        <Input v-model=\"form.start\" @on-change=\"onChange\" placeholder=\"\" style=\"width: 80px\"/>\n                        -\n                        <Input v-model=\"form.end\" @on-change=\"onChange\" placeholder=\"\" style=\"width: 80px\"/>\n                    </div>\n                </div>\n            </div>\n            <div ref=\"EmotionAnalysisId\" class=\"EntityIdentificationEcharts\">\n\n            </div>\n        </Card>\n    </div>\n</template>\n\n<script>\n  import api from \"../../api/api\";\n\n  export default {\n    name: \"EmotionAnalysis\",\n    props: ['formData'],\n    data() {\n      return {\n        form: {\n          start: '0',\n          end: '0'\n        },\n        text: '',\n        fill: '',\n        data: '',\n        list: []\n      };\n    },\n    computed: {},\n    methods: {\n      onChange() {\n        if (this.form.end && this.form.start) {\n          if (this.form.start <= this.data && this.data <= this.form.end) {\n            this.list = [\n              {value: 0, name: '正'},\n              {value: 1, name: '中'},\n              {value: 0, name: '负'},\n            ]\n            this.text = '中'\n\n          } else {\n            if (this.data < this.form.start) {\n              this.list = [\n                {value: 0, name: '正'},\n                {value: 0, name: '中'},\n                {value: 1, name: '负'},\n              ]\n              this.text = '负'\n            } else if (this.data > this.form.end) {\n              this.list = [\n                {value: 1, name: '正'},\n                {value: 0, name: '中'},\n                {value: 0, name: '负'},\n              ]\n              this.text = '正'\n            }\n          }\n        }\n        this.$nextTick(() => {\n          this.initEchart()\n        })\n      },\n      async LoadData(record) {\n        try {\n          this.data = []\n          let formData = new FormData();\n          formData.append('title', record.title);\n          formData.append('content', record.content);\n          let result = await api.EmotionAnalysisList(formData)\n          if (result.code === 200) {\n            this.data = result.data\n            if (this.form.start <= this.data && this.data <= this.form.end) {\n              this.list = [\n                {value: 0, name: '正'},\n                {value: 1, name: '中'},\n                {value: 0, name: '负'},\n              ]\n              this.text = '中'\n            } else {\n              if (this.data < this.form.start) {\n                this.list = [\n                  {value: 0, name: '正'},\n                  {value: 0, name: '中'},\n                  {value: 1, name: '负'},\n                ]\n                this.text = '负'\n              } else if (this.data > this.form.end) {\n                this.list = [\n                  {value: 1, name: '正'},\n                  {value: 0, name: '中'},\n                  {value: 0, name: '负'},\n                ]\n                this.text = '正'\n              }\n            }\n          }\n          this.$nextTick(() => {\n            this.initEchart()\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      initEchart() {\n        let EmotionAnalysisId = this.$refs.EmotionAnalysisId;\n        if (!EmotionAnalysisId) {\n          return false\n        }\n        const myChart = this.$echarts.init(EmotionAnalysisId);\n        this.fill = this.text == '正' ? \"#017E03\" : this.text == '中' ?  \"#FF8529\" : this.text == '负' ?  \"#D3333F\" : \"#000\"\n        let option = {\n          color: [\n            \"#017E03\",\n            \"#FF8529\",\n            \"#D3333F\",\n          ],\n          tooltip: {\n            trigger: 'item',\n            formatter: \"{a} <br/>{b}: {d}%\"\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              mark: {show: true},\n              restore: {show: true},\n              saveAsImage: {show: true}\n            }\n          },\n          legend: {\n            orient: 'vertical',\n            x: 'left',\n            data: ['正', '中', '负']\n          },\n          graphic:{       //图形中间文字\n            type:\"text\",\n            left:\"center\",\n            top:\"center\",\n            style:{\n              text: this.text,\n              textAlign:\"center\",\n              fill: this.fill,\n              fontSize: 30\n            }\n          },\n          series: [\n            {\n              name: '情感分析',\n              type: 'pie',\n              radius: ['50%', '70%'],\n              avoidLabelOverlap: false,\n              label: {\n                normal: {\n                  show: false,\n                  position: 'center'\n                },\n                emphasis: {\n                  show: false,\n                  textStyle: {\n                    fontSize: '30',\n                    fontWeight: 'bold'\n                  }\n                }\n              },\n              data: this.list\n            }\n          ]\n        };\n        myChart.setOption(option, true);\n      },\n    },\n    created() {\n      if (this.formData.title && this.formData.content) {\n        this.LoadData(this.formData)\n      }\n    },\n\n    mounted() {\n    },\n    updated() {\n    }\n  }\n</script>\n\n\n<style lang=\"scss\">\n    .PartsAnalysis {\n        background-color: #f6f6f6;\n        min-height: 300px;\n        padding: 20px;\n\n        .EmotionAnalysis {\n            .headersIn {\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n                padding: 10px 16px;\n            }\n\n            .ivu-card-head {\n                padding: 0;\n            }\n\n            .EntityIdentificationEcharts {\n                width: 100%;\n                min-height: 300px;\n            }\n\n            .p {\n                font-size: 16px;\n                color: #17233d;\n                font-weight: 500;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n        }\n    }\n</style>\n"]}]}