{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/views/LayoutTest/KeyPhrase.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/LayoutTest/KeyPhrase.vue","mtime":1585021550718},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAiLi4vLi4vYXBpL2FwaSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIktleVBocmFzZSIsCiAgcHJvcHM6IFsnZm9ybURhdGEnXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgd29yZDogW10sCiAgICAgIGlzTGlzdDogdHJ1ZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICBtZXRob2RzOiB7CiAgICBpbml0RWNoYXJ0KCkgewogICAgICBsZXQgS2V5d29yZElkID0gdGhpcy4kcmVmcy5LZXl3b3JkSWQ7CiAgICAgIGlmICghS2V5d29yZElkKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgIH0KICAgICAgY29uc3QgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChLZXl3b3JkSWQpOwogICAgICB2YXIgbnVtID0gJyc7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMzsgaSsrKSB7CiAgICAgICAgbnVtICs9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTsKICAgICAgfQogICAgICBjb25zdCB3b3JkcyA9IFtdCiAgICAgIHRoaXMud29yZC5tYXAoKHYsIGkpID0+IHsKICAgICAgICB3b3Jkcy5wdXNoKHsKICAgICAgICAgIG5hbWU6IHYud29yZCwKICAgICAgICAgIHZhbHVlOiB2LnNjb3JlCiAgICAgICAgfSkKICAgICAgfSkKICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICB9LAogICAgICAgIHRvb2xib3ggOiB7CiAgICAgICAgICBzaG93IDogdHJ1ZSwKICAgICAgICAgIGZlYXR1cmUgOiB7CiAgICAgICAgICAgIG1hcmsgOiB7IHNob3cgOiB0cnVlIH0sCiAgICAgICAgICAgIHJlc3RvcmUgOiB7IHNob3cgOiB0cnVlIH0sCiAgICAgICAgICAgIHNhdmVBc0ltYWdlIDogeyBzaG93IDogdHJ1ZSB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogIiIsCiAgICAgICAgICAgIHR5cGU6ICJ3b3JkQ2xvdWQiLAogICAgICAgICAgICBzaXplOiBbIjEwMCUiLCAiMTAwJSJdLAogICAgICAgICAgICB0ZXh0UGFkZGluZzogMCwKICAgICAgICAgICAgYXV0b1NpemU6IHsKICAgICAgICAgICAgICBlbmFibGU6IHRydWUsCiAgICAgICAgICAgICAgbWluU2l6ZTogMTQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gKAogICAgICAgICAgICAgICAgICAgICJyZ2IoIiArCiAgICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjU1KSArCiAgICAgICAgICAgICAgICAgICAgIiwgIiArCiAgICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjU1KSArCiAgICAgICAgICAgICAgICAgICAgIiwgIiArCiAgICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjU1KSArCiAgICAgICAgICAgICAgICAgICAgIikiCiAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiB3b3JkcwogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgYW5pbWF0aW9uVHlwZTogInNjYWxlIiwKICAgICAgICBhbmltYXRpb25FYXNpbmc6ICJlbGFzdGljT3V0IiwKICAgICAgICBhbmltYXRpb25EZWxheTogZnVuY3Rpb24gKGlkeCkgewogICAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAyMDA7CiAgICAgICAgfQogICAgICB9LCB0cnVlKTsKICAgIH0sCiAgICBhc3luYyBMb2FkRGF0YShyZWNvcmQpIHsKICAgICAgdHJ5IHsKICAgICAgICB0aGlzLndvcmQgPSBbXQogICAgICAgIHRoaXMuaXNMaXN0ID0gdHJ1ZQogICAgICAgIGxldCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgndGl0bGUnLCByZWNvcmQudGl0bGUpOwogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnY29udGVudCcsIHJlY29yZC5jb250ZW50KTsKICAgICAgICBsZXQgcmVzdWx0ID0gYXdhaXQgYXBpLktleVBocmFzZUxpc3QoZm9ybURhdGEpCiAgICAgICAgaWYgKHJlc3VsdC5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHRoaXMud29yZCA9IHJlc3VsdC5kYXRhCiAgICAgICAgfQogICAgICAgIHRoaXMuaXNMaXN0ID0gZmFsc2UKICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICB0aGlzLmluaXRFY2hhcnQoKQogICAgICAgIH0pCiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlKQogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMuZm9ybURhdGEudGl0bGUgJiYgdGhpcy5mb3JtRGF0YS5jb250ZW50KSB7CiAgICAgIHRoaXMuTG9hZERhdGEodGhpcy5mb3JtRGF0YSkKICAgIH0KICB9LAoKICBtb3VudGVkKCkgewoKICB9LAogIHVwZGF0ZWQoKSB7CiAgfQp9Cg=="},{"version":3,"sources":["KeyPhrase.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmfile":"KeyPhrase.vue","sourceRoot":"src/views/LayoutTest","sourcesContent":["<template>\n    <div class=\"PartsAnalysis\">\n        <Card dis-hover class=\"Card\">\n            <p slot=\"title\">关键短语</p>\n            <div ref=\"KeywordId\" class=\"KeywordEcharts\" v-if=\"word.length > 0\">\n\n            </div>\n            <div  class=\"KeywordElse\" v-else>\n                <div>没有关键短语</div>\n            </div>\n            <Spin fix v-show=\"isList\">\n                <Icon type=\"ios-loading\" size=18 class=\"demo-spin-icon-load\"></Icon>\n                <div>载入中...</div>\n            </Spin>\n        </Card>\n    </div>\n</template>\n\n<script>\n  import api from \"../../api/api\";\n\n  export default {\n    name: \"KeyPhrase\",\n    props: ['formData'],\n    data() {\n      return {\n        word: [],\n        isList: true\n      };\n    },\n    computed: {},\n    methods: {\n      initEchart() {\n        let KeywordId = this.$refs.KeywordId;\n        if (!KeywordId) {\n          return false\n        }\n        const myChart = this.$echarts.init(KeywordId);\n        var num = '';\n        for (var i = 0; i < 3; i++) {\n          num += Math.floor(Math.random() * 10);\n        }\n        const words = []\n        this.word.map((v, i) => {\n          words.push({\n            name: v.word,\n            value: v.score\n          })\n        })\n        myChart.setOption({\n          tooltip: {\n            show: true\n          },\n          toolbox : {\n            show : true,\n            feature : {\n              mark : { show : true },\n              restore : { show : true },\n              saveAsImage : { show : true }\n            }\n          },\n          series: [\n            {\n              name: \"\",\n              type: \"wordCloud\",\n              size: [\"100%\", \"100%\"],\n              textPadding: 0,\n              autoSize: {\n                enable: true,\n                minSize: 14\n              },\n              textStyle: {\n                normal: {\n                  color: function () {\n                    return (\n                      \"rgb(\" +\n                      Math.round(Math.random() * 255) +\n                      \", \" +\n                      Math.round(Math.random() * 255) +\n                      \", \" +\n                      Math.round(Math.random() * 255) +\n                      \")\"\n                    );\n                  }\n                }\n              },\n              data: words\n            }\n          ],\n          animationType: \"scale\",\n          animationEasing: \"elasticOut\",\n          animationDelay: function (idx) {\n            return Math.random() * 200;\n          }\n        }, true);\n      },\n      async LoadData(record) {\n        try {\n          this.word = []\n          this.isList = true\n          let formData = new FormData();\n          formData.append('title', record.title);\n          formData.append('content', record.content);\n          let result = await api.KeyPhraseList(formData)\n          if (result.code === 200) {\n            this.word = result.data\n          }\n          this.isList = false\n          this.$nextTick(() => {\n            this.initEchart()\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    },\n    created() {\n      if (this.formData.title && this.formData.content) {\n        this.LoadData(this.formData)\n      }\n    },\n\n    mounted() {\n\n    },\n    updated() {\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n    .PartsAnalysis {\n        background-color: #f6f6f6;\n        min-height: 300px;\n        padding: 20px;\n        .KeywordElse{\n            height: 300px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .Card {\n            .KeywordEcharts {\n                height: 300px;\n            }\n        }\n    }\n</style>\n"]}]}