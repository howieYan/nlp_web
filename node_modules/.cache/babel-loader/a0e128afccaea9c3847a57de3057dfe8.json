{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js!/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/views/ObjectLevelEmotion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/ObjectLevelEmotion.vue","mtime":1582429519251},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ObjectLevelEmotion.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"PartsAnalysis objectLevel\">\n        <Card dis-hover class=\"Card\">\n            <p slot=\"title\">对象层面情感</p>\n            <div style=\"position: relative\" v-if=\"!isShow\">\n                <div ref=\"KeywordId\" class=\"KeywordEcharts\">\n\n                </div>\n                <div style=\"position: absolute;right: 80px;top: 6px;display: flex;align-items: center;\">\n                    <div style=\"display: flex;align-items: center;\" v-for=\"(item, i) in list\" :key=\"i\">\n                        <div style=\"width: 30px;height: 15px;border-radius: 3px\" :style=\"{backgroundColor: item.color}\"></div>\n                        <div style=\"padding: 0 5px\">{{item.name}}</div>\n                    </div>\n                </div>\n            </div>\n            <div v-else style=\"min-height: 600px;display: flex;align-items: center;justify-content: center\">\n                没有对象层面情感\n            </div>\n            <Spin fix v-show=\"isList\">\n                <Icon type=\"ios-loading\" size=18 class=\"demo-spin-icon-load\"></Icon>\n                <div>Loading</div>\n            </Spin>\n        </Card>\n    </div>\n</template>\n\n<script>\n  import api from \"../api/api\";\n\n  export default {\n    name: \"ObjectLevelEmotion\",\n    props: ['formData'],\n    data() {\n      return {\n        data: [],\n        links: [],\n        isList: true,\n        isShow: false,\n        categories: [],\n        list: [{name: '正', color: '#017E03'}, {name: '中', color: '#FF8529'}, {name: '负', color: '#D3333F'}]\n      };\n    },\n    computed: {},\n    methods: {\n      initEchart() {\n        let KeywordId = this.$refs.KeywordId;\n        if (!KeywordId) {\n          return false\n        }\n        const myChart = this.$echarts.init(KeywordId);\n        let option = {\n          color: [\n            \"#19c7b9\",\n            \"#1919c7\",\n            \"#9f19c7\",\n          ],\n          title: {\n            text: '',\n            subtext: '',\n            x: 'right',\n            y: 'bottom'\n          },\n          tooltip: {\n            show: false,\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              restore: {show: true},\n              magicType: {show: true,},\n              saveAsImage: {show: true}\n            }\n          },\n          legend: {\n            x: 'left',\n            data: ['文本', '对象', '层面',]\n          },\n          series: [{\n            type: 'graph',\n            layout: 'force',\n            legendHoverLink: true,\n            focusNodeAdjacency: true,\n            force: {\n              repulsion: 500\n            },\n            categories: [\n              {\n                name: '文本'\n              },\n              {\n                name: '对象'\n              },\n              {\n                name: '层面'\n              },\n            ],\n            label : {\n              show : true,\n            },\n            lineStyle: {\n              color: 'source',\n              curveness: 0.3\n            },\n            emphasis: {\n              lineStyle: {\n                width: 5\n              }\n            },\n            roam : true,\n            data : this.data,\n            links : this.links,\n          }]\n        };\n        myChart.setOption(option, true);\n      },\n      async LoadData(record) {\n        try {\n          this.isList = true\n          this.data = []\n          const data = []\n          this.links = []\n          let formData = new FormData();\n          formData.append('title', record.title);\n          formData.append('content', record.content);\n          formData.append('industry', 22);\n          let result = await api.ObjectLevelEmotionList(formData)\n\n          if (result.code === 200) {\n            if (result.data.length === 0) {\n              this.isShow = true\n            } else {\n              this.isShow = false\n            }\n            console.log(result)\n            if (result.data.length > 0) {\n              result.data.map((v, i) => {\n                data.push({\n                  id: v.target.id,\n                  name: v.target.name,\n                  value: v.target.sentiment,\n                  category: 1,\n                })\n                if (v.beddings.length > 0) {\n                  v.beddings.map((item, j) => {\n                    data.push({\n                      id: item.id,\n                      name: item.name,\n                      value: item.sentiment,\n                      category: 2,\n                    })\n                  })\n                }\n              })\n\n              let item = [{id: '-1', name: '文本', showName: '文本', value: 10, category: 0}]\n              this.data = [...item, ...data]\n              result.data.map((v, i) => {\n                this.links.push({\n                  source: v.target.id,\n                  target: '-1'\n                })\n                if (v.beddings.length > 0) {\n                  v.beddings.map((item, j) => {\n                    this.links.push({\n                      source: item.id,\n                      target: v.target.id,\n                    })\n                  })\n                }\n              })\n              this.isList = false\n              this.data.forEach((node) => {\n                if (node.category === 0) {\n                  node.symbolSize = 70;\n                  node.itemStyle = {\n                    normal: {\n                      borderColor: '#19c7b9',\n                      borderWidth: 5,\n                      color: '#19c7b9',\n                    },\n\n                  }\n                } else if (node.category === 1) {\n                  node.symbolSize = 60;\n                  node.itemStyle = {\n                    normal: {\n                      borderColor: '#1919c7',\n                      borderWidth: 5,\n                      color: node.value > 0 ? \"#017E03\" : node.value == 0 ? \"#FF8529\" : node.value < 0 ? \"#D3333F\" : '',\n                    },\n\n                  }\n                } else {\n                  // 大于0 正面，等于0 中性，小于0 负面\n                  node.symbolSize = 70  / 1.5;\n                  node.label = {\n                    normal: {\n                      show: node.symbolSize > 30\n                    }\n                  };\n                  node.itemStyle = {\n                    normal: {\n                      borderColor: '#9f19c7',\n                      borderWidth: 5,\n                      color: node.value > 0 ? \"#017E03\" : node.value == 0 ? \"#FF8529\" : node.value < 0 ? \"#D3333F\" : '',\n                    },\n\n                  }\n                }\n\n                node.category = node.category;\n              });\n            }\n            this.$nextTick(() => {\n              this.initEchart()\n            })\n          }\n          this.isList = false\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    },\n    created() {\n      if (this.formData.title && this.formData.content) {\n        this.LoadData(this.formData)\n      }\n    },\n\n    mounted() {\n    },\n    updated() {\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n    .demo-spin-icon-load{\n        animation: ani-demo-spin 1s linear infinite;\n    }\n    @keyframes ani-demo-spin {\n        from { transform: rotate(0deg);}\n        50%  { transform: rotate(180deg);}\n        to   { transform: rotate(360deg);}\n    }\n    .demo-spin-col{\n        position: relative;\n        border: 1px solid #eee;\n    }\n    .objectLevel {\n        background-color: #f6f6f6;\n        min-height: 600px;\n        padding: 20px;\n\n        .KeywordElse {\n            min-height: 600px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .Card {\n            .KeywordEcharts {\n                min-height: 600px;\n            }\n        }\n    }\n</style>\n\n"],"sourceRoot":"src/views"}]}