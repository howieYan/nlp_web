{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/thread-loader/dist/cjs.js!/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js!/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/views/Children/ObjectLevelEmotion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/Children/ObjectLevelEmotion.vue","mtime":1582430929273},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/thread-loader/dist/cjs.js","mtime":1571922490305},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}