{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js!/Users/howie/Documents/nlp_web/src/views/cleaning/api/api.js","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/cleaning/api/api.js","mtime":1584941155664},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBxcyBmcm9tICdxcyc7CmF4aW9zLmRlZmF1bHRzLnRpbWVvdXQgPSA2MDAwMDsgLy8gdGltZW91dCBpbiAxMCBzZWNvbmRzLgovLyBheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gJycKCmV4cG9ydCBkZWZhdWx0IHsKICBzZW5kOiBmdW5jdGlvbiBzZW5kKG1ldGhvZCwgdXJpLCBkYXRhLCBoZWFkZXJzLCByZWNvcmQsIGtlbikgewogICAgLy8gZGF0YSA9IHFzKGRhdGEpCiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICB0cnkgewogICAgICAgIGF4aW9zKHsKICAgICAgICAgIG1ldGhvZDogbWV0aG9kLAogICAgICAgICAgdXJsOiB1cmksCiAgICAgICAgICBkYXRhOiBkYXRhLAogICAgICAgICAgcGFyYW1zOiBkYXRhLAogICAgICAgICAgaGVhZGVyczogey8vICdBdXRob3JpemF0aW9uJzogJycsCiAgICAgICAgICAgIC8vICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChrZW4gPT09ICd0b2tlbicpIHsKICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgICAgICB9CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ0NvbW11bmljYXRpb24gZXhjZXB0aW9uLCBwbGVhc2UgY2hlY2sgdGhlIG5ldHdvcmsgb3IgcmV0cnkgbGF0ZXIuJykpOwogICAgICAgIH0pOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgY29uc29sZS5lcnJvcigiRXhjZXB0aW9uOiAiLmNvbmNhdChlKSk7CiAgICAgICAgcmVqZWN0KGUpOwogICAgICB9CiAgICB9KTsKICB9LAogIExpc3Q6IGZ1bmN0aW9uIExpc3QoZGF0YSkgewogICAgcmV0dXJuIHRoaXMuc2VuZCgnR0VUJywgImh0dHA6Ly82MC4yNDcuNjIuMTEwOjEwMDQ5L2NyYXdsc2VydmVyL3BhcnNlL3BhcnNlVXJsP3VybD0iLmNvbmNhdChkYXRhLnVybCkpOwogIH0KfTs="},{"version":3,"sources":["/Users/howie/Documents/nlp_web/src/views/cleaning/api/api.js"],"names":["axios","qs","defaults","timeout","send","method","uri","data","headers","record","ken","Promise","resolve","reject","url","params","then","response","status","catch","error","console","Error","e","List"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,KAAzB,C,CAA+B;AAC/B;;AACA,eAAe;AACbC,EAAAA,IADa,gBACPC,MADO,EACCC,GADD,EACMC,IADN,EACYC,OADZ,EACqBC,MADrB,EAC6BC,GAD7B,EACkC;AAC7C;AACA,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAI;AACFb,QAAAA,KAAK,CAAC;AACJK,UAAAA,MAAM,EAAEA,MADJ;AAEJS,UAAAA,GAAG,EAAGR,GAFF;AAGJC,UAAAA,IAAI,EAAEA,IAHF;AAIJQ,UAAAA,MAAM,EAAER,IAJJ;AAKJC,UAAAA,OAAO,EAAE,CACP;AACA;AAFO;AALL,SAAD,CAAL,CAUGQ,IAVH,CAUQ,UAAAC,QAAQ,EAAI;AAChB,cAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BN,YAAAA,OAAO,CAACK,QAAQ,CAACV,IAAV,CAAP;AACD;;AACD,cAAIG,GAAG,KAAK,OAAZ,EAAqB;AACnBE,YAAAA,OAAO,CAACK,QAAD,CAAP;AACD;AACF,SAjBH,EAkBGE,KAlBH,CAkBS,UAACC,KAAD,EAAW;AAChBC,UAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAP,UAAAA,MAAM,CAAC,IAAIS,KAAJ,CAAU,mEAAV,CAAD,CAAN;AACD,SArBH;AAsBD,OAvBD,CAuBE,OAAOC,CAAP,EAAU;AACVF,QAAAA,OAAO,CAACD,KAAR,sBAA4BG,CAA5B;AACAV,QAAAA,MAAM,CAACU,CAAD,CAAN;AACD;AACF,KA5BM,CAAP;AA6BD,GAhCY;AAiCbC,EAAAA,IAjCa,gBAiCPjB,IAjCO,EAiCD;AACV,WAAO,KAAKH,IAAL,CAAU,KAAV,sEAA8EG,IAAI,CAACO,GAAnF,EAAP;AACD;AAnCY,CAAf","sourcesContent":["import axios from 'axios'\nimport qs from 'qs'\naxios.defaults.timeout = 60000 // timeout in 10 seconds.\n// axios.defaults.baseURL = ''\nexport default {\n  send (method, uri, data, headers, record, ken) {\n    // data = qs(data)\n    return new Promise((resolve, reject) => {\n      try {\n        axios({\n          method: method,\n          url:  uri,\n          data: data,\n          params: data,\n          headers :{\n            // 'Authorization': '',\n            // 'Content-Type': 'multipart/form-data',\n          }\n        })\n          .then(response => {\n            if (response.status === 200) {\n              resolve(response.data)\n            }\n            if (ken === 'token') {\n              resolve(response)\n            }\n          })\n          .catch((error) => {\n            console.error(error)\n            reject(new Error('Communication exception, please check the network or retry later.'))\n          })\n      } catch (e) {\n        console.error(`Exception: ${e}`)\n        reject(e)\n      }\n    })\n  },\n  List (data) {\n    return this.send('GET', `http://60.247.62.110:10049/crawlserver/parse/parseUrl?url=${data.url}`)\n  },\n}\n"]}]}