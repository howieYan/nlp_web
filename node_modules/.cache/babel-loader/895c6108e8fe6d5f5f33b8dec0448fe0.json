{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js!/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/views/LayoutTest/EntityIdentification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/LayoutTest/EntityIdentification.vue","mtime":1587550985781},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EntityIdentification.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"PartsAnalysis EntityIdentification\">\n        <Card dis-hover class=\"Card\">\n            <p slot=\"title\">实体识别</p>\n            <div ref=\"EntityIdentificationId\" class=\"EntityIdentificationEcharts\">\n\n            </div>\n            <Spin fix v-show=\"isList\">\n                <Icon type=\"ios-loading\" size=18 class=\"demo-spin-icon-load\"></Icon>\n                <div>载入中...</div>\n            </Spin>\n        </Card>\n    </div>\n</template>\n\n<script>\n  import api from '../../api/api'\n  import pinyin from \"pinyin\";\n\n  export default {\n    props: ['formData'],\n    name: \"EntityIdentification\",\n    data() {\n      return {\n        data: [],\n        links: [],\n        isList: true\n      };\n    },\n    computed: {},\n    methods: {\n      pinyin: pinyin,\n      initEchart() {\n        let EntityIdentificationId = this.$refs.EntityIdentificationId;\n        if (!EntityIdentificationId) {\n          return false\n        }\n        const myChart = this.$echarts.init(EntityIdentificationId);\n        let option = {\n          title: {\n            text: '',\n            subtext: '',\n            x: 'right',\n            y: 'bottom'\n          },\n          // tooltip : {\n          // },\n          toolbox: {\n            show: true,\n            feature: {\n              restore: {show: true},\n              magicType: {show: true,},\n              saveAsImage: {show: true}\n            }\n          },\n          legend: {\n            x: 'left',\n            data: ['实体', '实体词']\n          },\n          series: [{\n            type: 'graph',\n            layout: 'force',\n            legendHoverLink: true,\n            focusNodeAdjacency: true,\n            force: {\n              repulsion: 300\n            },\n            categories: [\n              {\n                name: '实体'\n              },\n              {\n                name: '实体词'\n              }\n            ],\n            itemStyle: {\n              normal: {\n                borderColor: '#fff',\n                borderWidth: 1,\n                shadowBlur: 10,\n                shadowColor: 'rgba(0, 0, 0, 0.3)'\n              }\n            },\n            label: {\n              show: true,\n              formatter: function (params) {\n                return params.data.showName //此处为label转换\n              }\n\n            },\n            lineStyle: {\n              color: 'source',\n              curveness: 0.3\n            },\n            emphasis: {\n              lineStyle: {\n                width: 5\n              }\n            },\n            roam: true,\n            data: this.data,\n            links: this.links,\n          }]\n        };\n        myChart.setOption(option, true);\n      },\n      async LoadData(record) {\n        try {\n          this.isList = true\n          const data = []\n          this.links = []\n          let formData = new FormData();\n          formData.append('title', record.title);\n          formData.append('content', record.content);\n          let id = 1\n          let result = await api.EntityIdentificationListTest(formData)\n          if (result.code === 200) {\n            let List = this.deteleObject(result.data)\n            if (List.length > 0) {\n              List = this.deteleObject(List)\n              List.map((v, i) => {\n                data.push({\n                  id: v.code,\n                  showName: v.name,\n                  category: 0,\n                })\n                if (v.words.length > 0) {\n                  v.words = this.deteleObject(v.words)\n                  v.words.map((item, j) => {\n                    data.push({\n                      id: i + item.id,\n                      value: item.score,\n                      showName: item.word,\n                      category: 1,\n                    })\n                  })\n                }\n              })\n              let item = [{name: '文本0', showName: '文本', category: 0}]\n              this.data = [...item, ...data]\n              this.data.forEach((node, i) => {\n                if (node.category === 0) {\n                  node.symbolSize = 50;\n                } else {\n                  node.symbolSize = 50 / 1.5 + node.value;\n                  node.category = node.category;\n                }\n              });\n              List.map((v, i) => {\n                this.links.push({\n                  source: v.code,\n                  target: '文本0'\n                })\n                if (v.words.length > 0) {\n                  v.words.map((items, k) => {\n                    this.links.push({\n                      source: i + items.id,\n                      target: v.code,\n                    })\n                  })\n                }\n              })\n            }\n            this.isList = false\n            this.$nextTick(() => {\n              this.initEchart()\n            })\n          }\n        } catch (e) {\n          console.log(e)\n        }\n      },\n      deteleObject(obj) {\n        var uniques = [];\n        var stringify = {};\n        for (var i = 0; i < obj.length; i++) {\n          var keys = Object.keys(obj[i]);\n          keys.sort(function (a, b) {\n            return (Number(a) - Number(b));\n          });\n          var str = '';\n          for (var j = 0; j < keys.length; j++) {\n            str += JSON.stringify(keys[j]);\n            str += JSON.stringify(obj[i][keys[j]]);\n          }\n          if (!stringify.hasOwnProperty(str)) {\n            uniques.push(obj[i]);\n            stringify[str] = true;\n          }\n        }\n        uniques = uniques;\n        return uniques;\n      },\n    },\n    created() {\n      if (this.formData.title || this.formData.content) {\n        this.LoadData(this.formData)\n      }\n    },\n\n    mounted() {\n      this.$nextTick(() => {\n        window.addEventListener('resize', () => {\n          if (this.$refs.EntityIdentificationId) {\n            this.$echarts.init(this.$refs.EntityIdentificationId).resize()\n          }\n        })\n      })\n    },\n    updated() {\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n    .EntityIdentification {\n        background-color: #f6f6f6;\n        padding: 20px;\n\n        .Card {\n            .EntityIdentificationEcharts {\n                width: 100%;\n                min-height: 600px;\n            }\n        }\n    }\n</style>\n\n"],"sourceRoot":"src/views/LayoutTest"}]}