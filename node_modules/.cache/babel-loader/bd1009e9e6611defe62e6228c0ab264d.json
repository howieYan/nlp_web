{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js!/Users/howie/Documents/nlp_web/src/permission.js","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/permission.js","mtime":1586326158537},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgS2V5Y2xvYWsgZnJvbSAna2V5Y2xvYWstanMnOwppbXBvcnQgQ29va2llcyBmcm9tICdqcy1jb29raWUnOwppbXBvcnQgYXBpIGZyb20gJy4vYXBpL2FwaSc7CmltcG9ydCBqd3REZWNvZGUgZnJvbSAnand0LWRlY29kZSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnJvdXRlci5iZWZvcmVFYWNoKGZ1bmN0aW9uICh0bywgZnJvbSwgbmV4dCkgewogIHZhciByZWZyZXNoVG9rZW4gPSBDb29raWVzLmdldCgncmVmcmVzaFRva2VuJyk7IC8vIOiOt+WPlueUqOaIt+eZu+W9lXRva2VuCgogIHZhciB0b2tlbiA9IENvb2tpZXMuZ2V0KCd0b2tlbicpOyAvLyDojrflj5bnlKjmiLfnmbvlvZV0b2tlbgoKICB2YXIgZm9ybURhdGEgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7CiAgZm9ybURhdGEuYXBwZW5kKCdjbGllbnRfaWQnLCBzdG9yZS5zdGF0ZS5jbGllbnRJZCk7CiAgZm9ybURhdGEuYXBwZW5kKCdncmFudF90eXBlJywgJ3JlZnJlc2hfdG9rZW4nKTsKICBmb3JtRGF0YS5hcHBlbmQoJ3JlZnJlc2hfdG9rZW4nLCByZWZyZXNoVG9rZW4pOwoKICBpZiAoIXRva2VuIHx8ICFyZWZyZXNoVG9rZW4pIHsKICAgIHZhciBrZXljbG9hayA9IG51bGw7CiAgICBrZXljbG9hayA9IEtleWNsb2FrKHsKICAgICAgdXJsOiAnaHR0cDovL3UueGxtZWRpYXdhdGNoLmNvbS9hdXRoJywKICAgICAgcmVhbG06ICd4bHBsYXRmb3JtJywKICAgICAgY2xpZW50SWQ6IHN0b3JlLnN0YXRlLmNsaWVudElkCiAgICB9KTsKICAgIGtleWNsb2FrLmluaXQoewogICAgICBvbkxvYWQ6ICdsb2dpbi1yZXF1aXJlZCcKICAgIH0pLnN1Y2Nlc3MoZnVuY3Rpb24gKGF1dGhlbnRpY2F0ZWQpIHsKICAgICAgaWYgKCFhdXRoZW50aWNhdGVkKSB7CiAgICAgICAgYWxlcnQoJ+eZu+mZhuWksei0pScpOwogICAgICB9IGVsc2UgewogICAgICAgIC8v55m75b2V5oiQ5Yqf5Zue6LCDCiAgICAgICAga2V5Y2xvYWsub25BdXRoU3VjY2VzcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGFsZXJ0KCdBdXRoIFN1Y2Nlc3MnKTsKICAgICAgICB9OyAvL+eZu+W9leWksei0peWbnuiwgwoKCiAgICAgICAga2V5Y2xvYWsub25BdXRoRXJyb3IgPSBmdW5jdGlvbiAoZXJyb3JEYXRhKSB7CiAgICAgICAgICBhbGVydCgiQXV0aCBFcnJvcjogIiArIEpTT04uc3RyaW5naWZ5KGVycm9yRGF0YSkpOwogICAgICAgIH07IC8vdG9rZW4g5Yi35paw5oiQ5Yqf5Zue6LCDCgoKICAgICAgICBrZXljbG9hay5vbkF1dGhSZWZyZXNoU3VjY2VzcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGFsZXJ0KCdBdXRoIFJlZnJlc2ggU3VjY2VzcycpOwogICAgICAgIH07IC8vdG9rZW4g5Yi35paw5aSx6LSl5Zue6LCDCgoKICAgICAgICBrZXljbG9hay5vbkF1dGhSZWZyZXNoRXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBhbGVydCgnQXV0aCBSZWZyZXNoIEVycm9yJyk7CiAgICAgICAgfTsgLy/ms6jplIDmiJDlip/lm57osIMKCgogICAgICAgIGtleWNsb2FrLm9uQXV0aExvZ291dCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGFsZXJ0KCdBdXRoIExvZ291dCcpOwogICAgICAgIH07IC8vdG9rZW7ov4fmnJ/ml7blm57osIMKCgogICAgICAgIGtleWNsb2FrLm9uVG9rZW5FeHBpcmVkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgYWxlcnQoJ0FjY2VzcyB0b2tlbiBleHBpcmVkLicpOwogICAgICAgIH07IC8v55m76ZmG5oiQ5YqfCgoKICAgICAgICBrZXljbG9hay5sb2FkVXNlclByb2ZpbGUoKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICB2YXIgZGVjb2RlID0gand0RGVjb2RlKGtleWNsb2FrLnRva2VuKTsKICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGtleWNsb2FrKSk7CiAgICAgICAgICBDb29raWVzLnNldCgndG9rZW4nLCBrZXljbG9hay50b2tlbik7CiAgICAgICAgICBDb29raWVzLnNldCgncmVmcmVzaFRva2VuJywga2V5Y2xvYWsucmVmcmVzaFRva2VuKTsKICAgICAgICAgIG5leHQoewogICAgICAgICAgICBwYXRoOiAiL3BhcnRzQW5hbHlzaXMiCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSkuZXJyb3IoZnVuY3Rpb24gKCkgewogICAgICBhbGVydCgn6K6k6K+B5Lit5b+D5byC5bi4Jyk7CiAgICB9KTsKICB9IGVsc2UgewogICAgYXhpb3MucG9zdCgnaHR0cDovL3UueGxtZWRpYXdhdGNoLmNvbS9hdXRoL3JlYWxtcy94bHBsYXRmb3JtL3Byb3RvY29sL29wZW5pZC1jb25uZWN0L3Rva2VuJywgZm9ybURhdGEsIHsKICAgICAgaGVhZGVyczogewogICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJyAvL+WwhuihqOWNleaVsOaNruS8oOmAkui9rOWMluS4umZvcm0tZGF0Yeexu+WeiwoKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuZXhwaXJlc19pbiA8PSAwKSB7CiAgICAgICAgLy8g6L+Z5LiqcmVzcG9uc2UuZGF0YS5leHBpcmVzX2luIOWwj+S6juetieS6jjAgIOabtOaWsCByZWZyZXNoVG9rZW4KICAgICAgICBDb29raWVzLnNldCgncmVmcmVzaFRva2VuJywgcmVzcG9uc2UuZGF0YS5yZWZyZXNoX3Rva2VuKTsKICAgICAgICBDb29raWVzLnNldCgndG9rZW4nLCByZXNwb25zZS5kYXRhLmFjY2Vzc190b2tlbik7CiAgICAgICAgYXhpb3MucG9zdCgnaHR0cDovL3UueGxtZWRpYXdhdGNoLmNvbS9hdXRoL3JlYWxtcy94bHBsYXRmb3JtL3Byb3RvY29sL29wZW5pZC1jb25uZWN0L2xvZ291dCcsIGZvcm1EYXRhLCB7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJwogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykge30pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgey8vIOivt+axguWksei0peWkhOeQhgogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIOWkp+S6jjAg5bCx5LiN6KaB5pu05pawIHJlZnJlc2hUb2tlbgogICAgICAgIGlmICh0by5wYXRoLmluZGV4T2YoJyZzdGF0ZT0nKSAhPT0gLTEpIHsKICAgICAgICAgIG5leHQoewogICAgICAgICAgICBwYXRoOiAnLycKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBuZXh0KCk7CiAgICAgICAgfQogICAgICB9CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgYXhpb3MucG9zdCgnaHR0cDovL3UueGxtZWRpYXdhdGNoLmNvbS9hdXRoL3JlYWxtcy94bHBsYXRmb3JtL3Byb3RvY29sL29wZW5pZC1jb25uZWN0L2xvZ291dCcsIGZvcm1EYXRhLCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHt9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsvLyDor7fmsYLlpLHotKXlpITnkIYKICAgICAgfSk7CiAgICAgIENvb2tpZXMuZ2V0KCd0b2tlbicsICcnKTsKICAgICAgQ29va2llcy5yZW1vdmUoJ3JvdXRlclVybCcpOwogICAgICBDb29raWVzLnJlbW92ZSgncmVmcmVzaFRva2VuJyk7CiAgICAgIHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAiL2IiCiAgICAgIH0pOwogICAgfSk7CiAgfQp9KTs="},{"version":3,"sources":["/Users/howie/Documents/nlp_web/src/permission.js"],"names":["router","store","Keycloak","Cookies","api","jwtDecode","axios","beforeEach","to","from","next","refreshToken","get","token","formData","URLSearchParams","append","state","clientId","keycloak","url","realm","init","onLoad","success","authenticated","alert","onAuthSuccess","onAuthError","errorData","JSON","stringify","onAuthRefreshSuccess","onAuthRefreshError","onAuthLogout","onTokenExpired","loadUserProfile","data","decode","console","log","set","path","error","post","headers","then","response","expires_in","refresh_token","access_token","res","catch","indexOf","remove","push"],"mappings":"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","sourcesContent":["import router from './router'\nimport store from './store'\nimport Keycloak from 'keycloak-js'\nimport Cookies from 'js-cookie'\nimport api from './api/api'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\nrouter.beforeEach((to, from, next) => {\n    let refreshToken = Cookies.get('refreshToken') // 获取用户登录token\n    let token = Cookies.get('token') // 获取用户登录token\n    let formData =  new URLSearchParams();\n    formData.append('client_id', store.state.clientId);\n    formData.append('grant_type', 'refresh_token');\n    formData.append('refresh_token', refreshToken);\n\n\n    if (!token || !refreshToken) {\n        let keycloak = null;\n        keycloak = Keycloak({\n            url: 'http://u.xlmediawatch.com/auth',\n            realm: 'xlplatform',\n            clientId: store.state.clientId\n        });\n\n        keycloak.init({ onLoad: 'login-required' }).success(function (authenticated) {\n            if (!authenticated) {\n                alert('登陆失败')\n            } else {\n                //登录成功回调\n\n                keycloak.onAuthSuccess = function () {\n\n                    alert('Auth Success');\n\n                };\n\n                //登录失败回调\n\n                keycloak.onAuthError = function (errorData) {\n\n                    alert(\"Auth Error: \" + JSON.stringify(errorData) );\n\n                };\n\n                //token 刷新成功回调\n\n                keycloak.onAuthRefreshSuccess = function () {\n\n                    alert('Auth Refresh Success');\n\n                };\n\n                //token 刷新失败回调\n\n                keycloak.onAuthRefreshError = function () {\n\n                    alert('Auth Refresh Error');\n\n                };\n\n                //注销成功回调\n\n                keycloak.onAuthLogout = function () {\n\n                    alert('Auth Logout');\n\n                };\n\n                //token过期时回调\n\n                keycloak.onTokenExpired = function () {\n\n                    alert('Access token expired.');\n\n                };\n                //登陆成功\n                keycloak.loadUserProfile().success(data => {\n                    const decode = jwtDecode(keycloak.token)\n                    console.log(JSON.stringify(keycloak))\n                    Cookies.set('token', keycloak.token)\n                    Cookies.set('refreshToken', keycloak.refreshToken)\n                    next({ path: \"/partsAnalysis\" })\n                })\n            }\n        }).error(function () {\n            alert('认证中心异常');\n        });\n    } else {\n        axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/token', formData,{\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded' //将表单数据传递转化为form-data类型\n            },\n        }).then(function (response) {\n                if (response.data.expires_in <= 0) {\n                    // 这个response.data.expires_in 小于等于0  更新 refreshToken\n                    Cookies.set('refreshToken', response.data.refresh_token)\n                    Cookies.set('token', response.data.access_token)\n                    axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/logout',formData,\n                        {headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then( function(res) {\n                    }).catch(function (error) { // 请求失败处理\n                    });\n                } else {\n                    // 大于0 就不要更新 refreshToken\n                    if (to.path.indexOf('&state=') !== -1) {\n                        next({path: '/'})\n                    } else {\n                        next()\n                    }\n                }\n            })\n            .catch(function (error) {\n                axios.post('http://u.xlmediawatch.com/auth/realms/xlplatform/protocol/openid-connect/logout',formData,\n                    {headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then( function(res) {\n                }).catch(function (error) { // 请求失败处理\n                });\n                Cookies.get('token', '');\n                Cookies.remove('routerUrl');\n                Cookies.remove('refreshToken');\n                router.push({ path: \"/b\" });\n            });\n\n    }\n})\n\n"]}]}