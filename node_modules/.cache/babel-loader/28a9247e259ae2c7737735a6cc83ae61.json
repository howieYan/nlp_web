{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/thread-loader/dist/cjs.js!/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js!/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/views/Layout/SubjectExtract.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/Layout/SubjectExtract.vue","mtime":1585021467047},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/thread-loader/dist/cjs.js","mtime":1571922490305},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy9ob3dpZS9Eb2N1bWVudHMvbmxwX3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvaG93aWUvRG9jdW1lbnRzL25scF93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXBpIGZyb20gIi4uLy4uL2FwaS9hcGkiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlN1YmplY3RFeHRyYWN0IiwKICBwcm9wczogWydmb3JtRGF0YSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBbXSwKICAgICAgbGlua3M6IFtdLAogICAgICBpc0xpc3Q6IHRydWUsCiAgICAgIGluZHVzdHJ5OiAnMjInCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIG1ldGhvZHM6IHsKICAgIGluaXRFY2hhcnQ6IGZ1bmN0aW9uIGluaXRFY2hhcnQoKSB7CiAgICAgIHZhciBLZXl3b3JkSWQgPSB0aGlzLiRyZWZzLktleXdvcmRJZDsKCiAgICAgIGlmICghS2V5d29yZElkKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICB2YXIgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChLZXl3b3JkSWQpOwogICAgICB2YXIgb3B0aW9uID0gewogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHRvcDogJzIwJywKICAgICAgICAgIGJvdHRvbTogJzIwJwogICAgICAgIH0sCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICcnLAogICAgICAgICAgc3VidGV4dDogJycsCiAgICAgICAgICB4OiAncmlnaHQnLAogICAgICAgICAgeTogJ2JvdHRvbScKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgZmVhdHVyZTogewogICAgICAgICAgICByZXN0b3JlOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICBtYWdpY1R5cGU6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNhdmVBc0ltYWdlOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIHg6ICdsZWZ0JywKICAgICAgICAgIGRhdGE6IFsn54i26IqC54K5JywgJ+WtkOiKgueCuSddCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAnZ3JhcGgnLAogICAgICAgICAgbGF5b3V0OiAnZm9yY2UnLAogICAgICAgICAgbGVnZW5kSG92ZXJMaW5rOiB0cnVlLAogICAgICAgICAgZm9jdXNOb2RlQWRqYWNlbmN5OiB0cnVlLAogICAgICAgICAgc3ltYm9sU2l6ZTogNDAsCiAgICAgICAgICBmb3JjZTogewogICAgICAgICAgICByZXB1bHNpb246IDYwMAogICAgICAgICAgfSwKICAgICAgICAgIGNhdGVnb3JpZXM6IFt7CiAgICAgICAgICAgIG5hbWU6ICfniLboioLngrknCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIG5hbWU6ICflrZDoioLngrknCiAgICAgICAgICB9XSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbm9kZVN0eWxlOiB7CiAgICAgICAgICAgICAgICBicnVzaFR5cGU6ICdib3RoJywKICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAncmdiYSgyNTUsMjE1LDAsMC40KScsCiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJ3NvdXJjZScsCiAgICAgICAgICAgICAgICBjdXJ2ZW5lc3M6IDAuMwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHJvYW06IHRydWUsCiAgICAgICAgICBkYXRhOiB0aGlzLmRhdGEsCiAgICAgICAgICBsaW5rczogdGhpcy5saW5rcwogICAgICAgIH1dCiAgICAgIH07CiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgdHJ1ZSk7CiAgICB9LAogICAgTG9hZERhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9Mb2FkRGF0YSA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVjb3JkKSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgdmFyIGZvcm1EYXRhLCByZXN1bHQsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICB0aGlzLmlzTGlzdCA9IHRydWU7CiAgICAgICAgICAgICAgICB0aGlzLmRhdGEgPSBbXTsKICAgICAgICAgICAgICAgIHRoaXMubGlua3MgPSBbXTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3RpdGxlJywgcmVjb3JkLnRpdGxlKTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnY29udGVudCcsIHJlY29yZC5jb250ZW50KTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnaW5kdXN0cnknLCB0aGlzLmluZHVzdHJ5ID09ICcwJyA/ICcnIDogdGhpcy5pbmR1c3RyeSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLlN1YmplY3RFeHRyYWN0TGlzdChmb3JtRGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTsKCiAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmRhdGEubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIHJlc3VsdC5kYXRhLm1hcChmdW5jdGlvbiAodiwgaSkgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZGF0YS5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdi5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeTogMQogICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgX3RoaXMubGlua3MucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZTogdi5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6ICLkuLvkvZMiCiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICBkYXRhID0gW3sKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICfkuLvkvZMnLAogICAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6IDAKICAgICAgICAgICAgICAgICAgICB9XTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEgPSBbXS5jb25jYXQoZGF0YSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuZGF0YSkpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5jYXRlZ29yeSA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN5bWJvbFNpemUgPSA1MDsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc3ltYm9sU2l6ZSA9IDYwOwogICAgICAgICAgICAgICAgICAgICAgICBub2RlLnN5bWJvbFNpemUgLz0gMS41OwogICAgICAgICAgICAgICAgICAgICAgICBub2RlLmxhYmVsID0gewogICAgICAgICAgICAgICAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogbm9kZS5zeW1ib2xTaXplID4gMzAKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgbm9kZS5pdGVtU3R5bGUgPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgbm9kZS5jYXRlZ29yeSA9IG5vZGUuY2F0ZWdvcnk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhID0gW107CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHRoaXMuaXNMaXN0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5pbml0RWNoYXJ0KCk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE1OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMCwgMTVdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIExvYWREYXRhKF94KSB7CiAgICAgICAgcmV0dXJuIF9Mb2FkRGF0YS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gTG9hZERhdGE7CiAgICB9KCkKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICBpZiAodGhpcy5mb3JtRGF0YS50aXRsZSAmJiB0aGlzLmZvcm1EYXRhLmNvbnRlbnQpIHsKICAgICAgdGhpcy5Mb2FkRGF0YSh0aGlzLmZvcm1EYXRhKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSwKICB1cGRhdGVkOiBmdW5jdGlvbiB1cGRhdGVkKCkge30KfTs="},null]}