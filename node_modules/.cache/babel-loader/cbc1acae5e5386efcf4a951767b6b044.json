{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js!/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/howie/Documents/nlp_web/src/views/Layout/KeyPhrase.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/views/Layout/KeyPhrase.vue","mtime":1585021550706},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/vue-loader/lib/index.js","mtime":1582429582421}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2hvd2llL0RvY3VtZW50cy9ubHBfd2ViL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGFwaSBmcm9tICIuLi8uLi9hcGkvYXBpIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJLZXlQaHJhc2UiLAogIHByb3BzOiBbJ2Zvcm1EYXRhJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHdvcmQ6IFtdLAogICAgICBpc0xpc3Q6IHRydWUKICAgIH07CiAgfSwKICBjb21wdXRlZDoge30sCiAgbWV0aG9kczogewogICAgaW5pdEVjaGFydDogZnVuY3Rpb24gaW5pdEVjaGFydCgpIHsKICAgICAgdmFyIEtleXdvcmRJZCA9IHRoaXMuJHJlZnMuS2V5d29yZElkOwoKICAgICAgaWYgKCFLZXl3b3JkSWQpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHZhciBteUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KEtleXdvcmRJZCk7CiAgICAgIHZhciBudW0gPSAnJzsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMzsgaSsrKSB7CiAgICAgICAgbnVtICs9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTsKICAgICAgfQoKICAgICAgdmFyIHdvcmRzID0gW107CiAgICAgIHRoaXMud29yZC5tYXAoZnVuY3Rpb24gKHYsIGkpIHsKICAgICAgICB3b3Jkcy5wdXNoKHsKICAgICAgICAgIG5hbWU6IHYud29yZCwKICAgICAgICAgIHZhbHVlOiB2LnNjb3JlCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgdG9vbGJveDogewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgbWFyazogewogICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcmVzdG9yZTogewogICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICIiLAogICAgICAgICAgdHlwZTogIndvcmRDbG91ZCIsCiAgICAgICAgICBzaXplOiBbIjEwMCUiLCAiMTAwJSJdLAogICAgICAgICAgdGV4dFBhZGRpbmc6IDAsCiAgICAgICAgICBhdXRvU2l6ZTogewogICAgICAgICAgICBlbmFibGU6IHRydWUsCiAgICAgICAgICAgIG1pblNpemU6IDE0CiAgICAgICAgICB9LAogICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgIG5vcm1hbDogewogICAgICAgICAgICAgIGNvbG9yOiBmdW5jdGlvbiBjb2xvcigpIHsKICAgICAgICAgICAgICAgIHJldHVybiAicmdiKCIgKyBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAyNTUpICsgIiwgIiArIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDI1NSkgKyAiLCAiICsgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjU1KSArICIpIjsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiB3b3JkcwogICAgICAgIH1dLAogICAgICAgIGFuaW1hdGlvblR5cGU6ICJzY2FsZSIsCiAgICAgICAgYW5pbWF0aW9uRWFzaW5nOiAiZWxhc3RpY091dCIsCiAgICAgICAgYW5pbWF0aW9uRGVsYXk6IGZ1bmN0aW9uIGFuaW1hdGlvbkRlbGF5KGlkeCkgewogICAgICAgICAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAyMDA7CiAgICAgICAgfQogICAgICB9LCB0cnVlKTsKICAgIH0sCiAgICBMb2FkRGF0YTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX0xvYWREYXRhID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZWNvcmQpIHsKICAgICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgICB2YXIgZm9ybURhdGEsIHJlc3VsdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIHRoaXMud29yZCA9IFtdOwogICAgICAgICAgICAgICAgdGhpcy5pc0xpc3QgPSB0cnVlOwogICAgICAgICAgICAgICAgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgndGl0bGUnLCByZWNvcmQudGl0bGUpOwogICAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdjb250ZW50JywgcmVjb3JkLmNvbnRlbnQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gYXBpLktleVBocmFzZUxpc3QoZm9ybURhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMud29yZCA9IHJlc3VsdC5kYXRhOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHRoaXMuaXNMaXN0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLmluaXRFY2hhcnQoKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1swLCAxNF1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gTG9hZERhdGEoX3gpIHsKICAgICAgICByZXR1cm4gX0xvYWREYXRhLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBMb2FkRGF0YTsKICAgIH0oKQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLmZvcm1EYXRhLnRpdGxlICYmIHRoaXMuZm9ybURhdGEuY29udGVudCkgewogICAgICB0aGlzLkxvYWREYXRhKHRoaXMuZm9ybURhdGEpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7fQp9Ow=="},{"version":3,"sources":["KeyPhrase.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"PartsAnalysis\">\n        <Card dis-hover class=\"Card\">\n            <p slot=\"title\">关键短语</p>\n            <div ref=\"KeywordId\" class=\"KeywordEcharts\" v-if=\"word.length > 0\">\n\n            </div>\n            <div  class=\"KeywordElse\" v-else>\n                <div>没有关键短语</div>\n            </div>\n            <Spin fix v-show=\"isList\">\n                <Icon type=\"ios-loading\" size=18 class=\"demo-spin-icon-load\"></Icon>\n                <div>载入中...</div>\n            </Spin>\n        </Card>\n    </div>\n</template>\n\n<script>\n  import api from \"../../api/api\";\n\n  export default {\n    name: \"KeyPhrase\",\n    props: ['formData'],\n    data() {\n      return {\n        word: [],\n        isList: true\n      };\n    },\n    computed: {},\n    methods: {\n      initEchart() {\n        let KeywordId = this.$refs.KeywordId;\n        if (!KeywordId) {\n          return false\n        }\n        const myChart = this.$echarts.init(KeywordId);\n        var num = '';\n        for (var i = 0; i < 3; i++) {\n          num += Math.floor(Math.random() * 10);\n        }\n        const words = []\n        this.word.map((v, i) => {\n          words.push({\n            name: v.word,\n            value: v.score\n          })\n        })\n        myChart.setOption({\n          tooltip: {\n            show: true\n          },\n          toolbox : {\n            show : true,\n            feature : {\n              mark : { show : true },\n              restore : { show : true },\n              saveAsImage : { show : true }\n            }\n          },\n          series: [\n            {\n              name: \"\",\n              type: \"wordCloud\",\n              size: [\"100%\", \"100%\"],\n              textPadding: 0,\n              autoSize: {\n                enable: true,\n                minSize: 14\n              },\n              textStyle: {\n                normal: {\n                  color: function () {\n                    return (\n                      \"rgb(\" +\n                      Math.round(Math.random() * 255) +\n                      \", \" +\n                      Math.round(Math.random() * 255) +\n                      \", \" +\n                      Math.round(Math.random() * 255) +\n                      \")\"\n                    );\n                  }\n                }\n              },\n              data: words\n            }\n          ],\n          animationType: \"scale\",\n          animationEasing: \"elasticOut\",\n          animationDelay: function (idx) {\n            return Math.random() * 200;\n          }\n        }, true);\n      },\n      async LoadData(record) {\n        try {\n          this.word = []\n          this.isList = true\n          let formData = new FormData();\n          formData.append('title', record.title);\n          formData.append('content', record.content);\n          let result = await api.KeyPhraseList(formData)\n          if (result.code === 200) {\n            this.word = result.data\n          }\n          this.isList = false\n          this.$nextTick(() => {\n            this.initEchart()\n          })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n    },\n    created() {\n      if (this.formData.title && this.formData.content) {\n        this.LoadData(this.formData)\n      }\n    },\n\n    mounted() {\n\n    },\n    updated() {\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n    .PartsAnalysis {\n        background-color: #f6f6f6;\n        min-height: 300px;\n        padding: 20px;\n        .KeywordElse{\n            height: 300px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n        .Card {\n            .KeywordEcharts {\n                height: 300px;\n            }\n        }\n    }\n</style>\n"],"sourceRoot":"src/views/LayoutTest"}]}