{"remainingRequest":"/Users/howie/Documents/nlp_web/node_modules/thread-loader/dist/cjs.js!/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js!/Users/howie/Documents/nlp_web/src/router/index.js","dependencies":[{"path":"/Users/howie/Documents/nlp_web/src/router/index.js","mtime":1586324480962},{"path":"/Users/howie/Documents/nlp_web/node_modules/cache-loader/dist/cjs.js","mtime":1571922489860},{"path":"/Users/howie/Documents/nlp_web/node_modules/thread-loader/dist/cjs.js","mtime":1571922490305},{"path":"/Users/howie/Documents/nlp_web/node_modules/babel-loader/lib/index.js","mtime":1571922477277}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}